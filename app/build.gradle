/*
 * Copyright 2018 Felipe Joglar Santos
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion configuration.compileSdk

    defaultConfig {
        applicationId configuration.applicationId
        minSdkVersion configuration.minSdk
        targetSdkVersion configuration.targetSdk
        versionCode 1

        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file('../distribution/debug.keystore')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'NAPSTER_API_KEY', napsterApiKey
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation "com.android.support:design:${versions.supportLibrary}"
    implementation "com.android.support:support-v4:${versions.supportLibrary}"
    implementation "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"

    implementation "com.squareup.picasso:picasso:${versions.picasso}"
    // Due to picasso dependencies versions mixing we need to add this dependency explicitly.
    implementation "com.android.support:exifinterface:${versions.supportLibrary}"

    implementation "android.arch.persistence.room:runtime:${versions.room}"
    implementation "android.arch.persistence.room:rxjava2:${versions.room}"
    annotationProcessor "android.arch.persistence.room:compiler:${versions.room}"

    implementation "android.arch.lifecycle:extensions:${versions.lifecycle}"
    annotationProcessor "android.arch.lifecycle:compiler:${versions.lifecycle}"

    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    implementation "com.google.firebase:firebase-core:${versions.firebase}"
    implementation "com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}"
    implementation "com.google.firebase:firebase-perf:${versions.performance}"

    testImplementation "junit:junit:${versions.junit}"

    androidTestImplementation "com.android.support.test:runner:${versions.test_runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
}

apply plugin: 'com.google.gms.google-services'